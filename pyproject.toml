[tool.poetry]
name = "novae"
version = "0.2.4"
description = "Graph-based foundation model for spatial transcriptomics data"
documentation = "https://mics-lab.github.io/novae/"
homepage = "https://mics-lab.github.io/novae/"
repository = "https://github.com/MICS-Lab/novae"
authors = ["Quentin Blampey <quentin.blampey@gmail.com>"]
packages = [{ include = "novae" }]
license = "BSD-3-Clause"
readme = "README.md"
classifiers = [
  "License :: OSI Approved :: BSD License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering",
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
scanpy = ">=1.9.8"
lightning = ">=2.2.1"
torch = ">=2.2.1"
torch-geometric = ">=2.5.2"
huggingface-hub = ">=0.24.0"
safetensors = ">=0.4.3"
pandas = ">=2.0.0"

ruff = { version = ">=0.11.4", optional = true }
mypy = { version = ">=1.15.0", optional = true }
pre-commit = { version = ">=3.8.0", optional = true }
pytest = { version = ">=7.1.3", optional = true }
pytest-cov = { version = ">=5.0.0", optional = true }
wandb = { version = ">=0.17.2", optional = true }
pyyaml = { version = ">=6.0.1", optional = true }
pydantic = { version = ">=2.8.2", optional = true }
ipykernel = { version = ">=6.22.0", optional = true }
ipywidgets = { version = ">=8.1.2", optional = true }
mkdocs-material = { version = ">=8.5.6", optional = true }
mkdocs-jupyter = { version = ">=0.21.0", optional = true }
mkdocstrings = { version = ">=0.19.0", optional = true }
mkdocstrings-python = { version = ">=0.7.1", optional = true }

[tool.poetry.extras]
dev = [
  "ruff",
  "mypy",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "wandb",
  "pyyaml",
  "pydantic",
  "ipykernel",
  "ipywidgets",
  "mkdocs-material",
  "mkdocs-jupyter",
  "mkdocstrings",
  "mkdocstrings-python",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["novae"]
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"


[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
  # DoNotUseAssert
  "S101",
  "TRY003",
  "RUF012",
  "B904",
  "E722",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"__init__.py" = ["F401", "I001"]
"*.ipynb" = ["F401"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
source = ["novae"]
omit = ["**/test_*.py", "novae/monitor/log.py", "novae/monitor/callback.py"]
